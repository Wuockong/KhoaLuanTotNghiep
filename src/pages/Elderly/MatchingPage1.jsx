import React, { useState } from "react";
import api from "../../services/axiosClient";
import "../../assets/styles/pages/matching.css"; // ƒê·∫£m b·∫£o b·∫°n ƒë√£ import file CSS
import { useNavigate } from "react-router-dom";

function MatchingPage() {
  const [nurseId, setNurseId] = useState("");
  const [serviceLevel, setServiceLevel] = useState("basic");
  const [startTime, setStartTime] = useState("");
  const [endTime, setEndTime] = useState("");
  const [message, setMessage] = useState("");
  const [matchId, setMatchId] = useState(null);
  const navigate = useNavigate();

  const handleCreateMatching = async () => {
  if (!nurseId || !startTime || !endTime) {
    setMessage("‚ùå Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin b·∫Øt bu·ªôc.");
    return;
  }

  try {
    const body = {
      nurse_id: nurseId,
      service_level: serviceLevel,
      booking_time: [
        {
          start_time: new Date(startTime).toISOString(),
          end_time: new Date(endTime).toISOString(),
        },
      ],
    };

    const res = await api.post("/matching", body);
    const newId = res.data.data._id;
    localStorage.setItem("matching_id", newId); // ‚úÖ L∆∞u ƒë√∫ng ID
    setMatchId(newId);
    setMessage("‚úÖ T·∫°o y√™u c·∫ßu chƒÉm s√≥c th√†nh c√¥ng!");
    setTimeout(() => {
      navigate("/matching/actions"); 
    }, 1000);
  } catch (err) {
    console.error("L·ªói t·∫°o matching:", err);
    setMessage("‚ùå Kh√¥ng th·ªÉ t·∫°o y√™u c·∫ßu. Vui l√≤ng th·ª≠ l·∫°i.");
  }
};

  return (
    <div className="matching-page-container">
      <div className="matching-card">
        <h1 className="title">üîó T·∫°o Matching gi·ªØa Elderly v√† Nurse</h1>

        {/* H√†ng 1: ID Y t√° v√† G√≥i d·ªãch v·ª• */}
        <div className="form-row">
          <div className="form-group">
            <label htmlFor="nurseId">üßë‚Äç‚öïÔ∏è ID Y t√°</label>
            <input
              id="nurseId"
              type="text"
              value={nurseId}
              onChange={(e) => setNurseId(e.target.value)}
              placeholder="Nh·∫≠p m√£ ID y t√°"
            />
          </div>
          <div className="form-group">
            <label htmlFor="serviceLevel">üì¶ G√≥i d·ªãch v·ª•</label>
            <select id="serviceLevel" value={serviceLevel} onChange={(e) => setServiceLevel(e.target.value)}>
              <option value="basic">C∆° b·∫£n</option>
              <option value="standard">Ti√™u chu·∫©n</option>
              <option value="premium">Cao c·∫•p</option>
            </select>
          </div>
        </div>

        {/* H√†ng 2: Khung gi·ªù booking */}
        <div className="form-group">
           <label>üóìÔ∏è Khung gi·ªù booking</label>
           <div className="form-row time-group">
              <div className="form-group">
                <label htmlFor="startTime" className="time-label">B·∫Øt ƒë·∫ßu</label>
                <input id="startTime" type="datetime-local" value={startTime} onChange={(e) => setStartTime(e.target.value)} />
              </div>
              <div className="form-group">
                <label htmlFor="endTime" className="time-label">K·∫øt th√∫c</label>
                <input id="endTime" type="datetime-local" value={endTime} onChange={(e) => setEndTime(e.target.value)} />
              </div>
           </div>
        </div>

        <button className="btn-submit" onClick={handleCreateMatching}>
          L∆∞u Matching
        </button>

        {message && (
            <p className={`message ${message.includes('‚úÖ') ? 'success' : 'error'}`}>
                {message}
            </p>
        )}

        {matchId && (
          <div className="result-box">
            <p><strong>ID Matching ƒë∆∞·ª£c t·∫°o:</strong> {matchId}</p>
            <p>B·∫°n c√≥ th·ªÉ d√πng ID n√†y ƒë·ªÉ th·ª±c hi·ªán c√°c b∆∞·ªõc ti·∫øp theo.</p>
          </div>
        )}
      </div>
    </div>
  );
}

export default MatchingPage;